{"version":3,"sources":["utils/index.js","components/Loading.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["FetchDocs","q","a","axios","get","params","response","data","docs","Loading","className","Header","App","useState","query","setQuery","hasResult","setHasResult","queryResult","setQueryResult","books","setBooks","loading","setLoading","sortBy","setSortBy","queryError","errors","setErrors","searchBooks","length","filter","doc","title","first_publish_year","author_name","cover_i","map","cover","author","published_date","sort","b","value","onChange","e","target","placeholder","classnames","type","onClick","htmlFor","id","attr","sortedBooks","sortByAttr","book","index","src","width","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0a473cb.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const FetchDocs = async (q) => {\r\n  const response = await axios.get(\r\n    'https://openlibrary.org/search.json',\r\n    {\r\n      params: {\r\n        q,\r\n      }\r\n    }\r\n  )\r\n\r\n  return response.data.docs\r\n}\r\n","import React from 'react'\r\nimport '../App.css'\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <>\r\n      <div className=\"loading\" />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react';\r\nimport { GiBookCover } from \"react-icons/gi\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"top-header\">\r\n            <h1 className=\"heading\">Book Search Tool </h1>\r\n            <div><GiBookCover className=\"book-icon\" /></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import './App.css';\nimport { FetchDocs } from './utils'\nimport { useState } from 'react'\nimport Loading from './components/Loading'\nimport Header from './components/Header'\nimport classnames from 'classnames'\n\nfunction App() {\n  const [query, setQuery] = useState('')\n  const [hasResult, setHasResult] = useState('')\n  const [queryResult, setQueryResult] = useState('')\n  const [books, setBooks] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [sortBy, setSortBy] = useState('title')\n  const [errors, setErrors] = useState({ queryError: '' })\n\n  const changeHandler = (e) => {\n    setQuery(e.target.value)\n    e.target.value.length > 0 ? setErrors(false) : setErrors(true)\n  }\n\n  const sortByAttr = (attr) => {\n    const sortedBooks = books.sort((a, b) => a[attr] > b[attr] ? 1 : -1)\n    setBooks([...sortedBooks])\n    setSortBy(attr)\n  }\n\n  const searchBooks = async () => {\n    if (query === '' || query === null) {\n      setErrors({ queryError: 'Please enter valid value' })\n      return\n    }\n\n    setLoading(true)\n\n    const docs = await FetchDocs(query)\n    docs.length !== 0 ? setHasResult('true') : setHasResult('false')\n\n    setBooks(\n      docs\n        .filter(doc => (doc.title && doc.first_publish_year && doc.author_name && doc.cover_i))\n        .map(doc => ({\n          title: doc.title,\n          cover: `https://covers.openlibrary.org/b/id/${doc.cover_i}-M.jpg`,\n          author: doc.author_name[0],\n          published_date: doc.first_publish_year\n        }))\n        .sort((a, b) => a[sortBy] > b[sortBy] ? 1 : -1))\n\n    setLoading(false)\n    setQueryResult(query)\n    setQuery(\"\")\n    setErrors({})\n  }\n\n  if (loading) return <Loading />\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <div className=\"container mx-auto\">\n\n        <div className=\"header h-center\">\n          <div className=\"search-box\">\n            <input\n              aria-label=\"search-query\"\n              value={query}\n              onChange={changeHandler}\n              placeholder=\"Plase input the query\"\n              className={classnames({ 'error': errors.queryError })}\n            />\n            <button type=\"button\" onClick={searchBooks}>Search</button>\n            <p className=\"text-error\"><small>{errors.queryError}</small></p>\n          </div>\n\n          <div className=\"sort-box\">\n            <label htmlFor=\"sortBy\">Sort By &nbsp;</label>\n            <select\n              aria-label=\"sort-by\"\n              id=\"sortBy\"\n              onChange={(e) => sortByAttr(e.target.value)}\n              value={sortBy}\n            >\n              <option value=\"title\">Title</option>\n              <option value=\"published_date\">Published Date</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"book-container\" data-testid='books'>\n          {hasResult === 'true' && <div>\n            <h1 className=\"results-text\">Found ({books.length}) results for \"{queryResult}\"</h1>\n            <div className=\"book-list\">\n              {books.map((book, index) => (\n                <div className=\"book d-flex\" key={index}>\n                  <div className=\"book-details\">\n                    <p><strong>Title:</strong> {book.title}</p>\n                    <p><strong>Author:</strong> {book.title}</p>\n                    <p><strong>Published Date:</strong> {book.published_date}</p>\n                  </div>\n                  <div>\n                    <div className=\"book-cover\">\n                      <img src={book.cover} width=\"100%\" alt=\"Cover\" />\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>}\n\n          {hasResult === 'false' && <h1 className=\"results-text\">No Result Found for \"{queryResult}\"</h1>}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}